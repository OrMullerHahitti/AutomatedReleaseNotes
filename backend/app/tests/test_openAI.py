



# openai.Deployment.list()

# openai.Completion.create( engine="gpt-turbo-0301", prompt="this is a test", temperature=1, max_tokens=100, top_p=0.5, frequency_penalty=0, presence_penalty=0, stop=None)


# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure_authentication_client import authenticate_openai
from azure.ai.openai import OpenAIClient
from azure.core.exceptions import HttpResponseError
import os
from azure.identity import DefaultAzureCredential
from azure.mgmt.cognitiveservices import CognitiveServicesManagementClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-cognitiveservices
# USAGE
    python list_deployments.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def list_openai_deployments():
    try:
        # Authenticate using Azure identity
        credential = authenticate_openai()

        # Your Azure OpenAI resource details
        endpoint = "https://<your-openai-resource-name>.openai.azure.com/"  # Replace with your Azure OpenAI endpoint
        client = OpenAIClient(endpoint, credential)

        # List all available models or deployments (depending on the API)
        models = client.list_models()  # This might vary depending on the exact API and resource type

        for model in models:
            print(f"Model ID: {model.id}, Name: {model.name}, Status: {model.status}")

    except HttpResponseError as e:
        print(f"Error occurred: {e}")

# Call the function
list_openai_deployments()